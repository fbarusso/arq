000 LOAD M(0F4); STOR M(001,DIREITA);
001 STOR M(003,ESQUERDA); LOAD M(000);
002 SUB M(0F1); STOR M(0F7);
003 LOAD M(000); DIV M(0F6);
004 SUB M(0F1); JUMP+ M(006,DIREITA);
005 LOAD M(0F8); ADD M(0F1);
006 STOR M(0F8); LOAD M(0F6);
007 ADD M(0F1); STOR M(0F6);
008 LOAD M(0F7); SUB M(0F1);
009 STOR M(0F7); JUMP+ M(003,ESQUERDA);
00A LOAD M(0F8); SUB M(0F2);
00B JUMP+ M(012,DIREITA); LOAD M(0F4);
00C JUMP M(0FE,ESQUERDA); LOAD MQ,M(000);
00D LOAD MQ; SUB M(0F9);
00E JUMP+ M(00F,ESQUERDA); JUMP M(012,DIREITA);	// O codigo cria um vetor apenas com os numeros primos
00F LOAD M(0F5); STOR M(010,DIREITA);		// a partir do endereco 0x200 da memoria
010 LOAD MQ; STOR M(000);
011 LOAD M(0F5); ADD M(0F1);
012 STOR M(0F5); LOAD M(0F3);
013 STOR M(0F8); LOAD M(0F1);
014 STOR M(0F6); LOAD M(0F4);
015 ADD M(0F1); STOR M(0F4);
016 LOAD M(0F0); SUB M(0F1);
017 STOR M(0F0); JUMP+ M(000,ESQUERDA);
018 LOAD M(0F5); SUB M(0FA);			// Carrega a ultima posicao do vetor de primos (com inicio em 0x200)
019 STOR M(300); ADD M(EEE);			// Subtrai 200 e guarda na posicao 0x300
0FE STOR M(00C,DIREITA); JUMP M(00C,DIREITA);

0F0 00 00 00 00 09
0F1 00 00 00 00 01
0F2 00 00 00 00 03
0F3 00 00 00 00 00
0F4 00 00 00 01 00
0F5 00 00 00 03 00
0F6 00 00 00 00 01
0F7 00 00 00 00 00 
0F8 00 00 00 00 00
0F9 00 00 00 00 02
0FA 00 00 00 02 00



