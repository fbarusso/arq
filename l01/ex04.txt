000 LOAD M(0F0)	 STOR M(004, ESQUERDA);			# O código é muito semelhante ao do ex 5;
001 STOR M(006, ESQUERDA); STOR M(007, DIREITA);
002 ADD M(0F1);	STOR M(004, DIREITA);
003 STOR M(007, ESQUERDA); STOR M(008, DIREITA);
004 LOAD M(FF1); SUB M(FF2);				# A principal diferença é a inversão na ordem de subtração
005 JUMP+ M(006, ESQUERDA); JUMP M(009, ESQUERDA);	# que equivaleria a mudar a igualdade em um "if"
006 LOAD M(FF1); STOR M(0FA);
007 LOAD M(FF2); STOR M(FF1);				# Além disso, são 15 posições do vetor ao envés de 20
008 LOAD M(0FA); STOR M(FF2);
009 LOAD M(0F0); ADD M(0F1);
00A STOR M(0F0); LOAD M(0F4);
00B SUB M(0F1); STOR M(0F4);
00C JUMP+ M(000, ESQUERDA); LOAD M(0F6);
00D STOR M(0F4); LOAD M(0F7);
00E STOR M(0F0); LOAD M(0F5)
00F SUB M(0F1); STOR M(0F5);
010 JUMP+ M(000, ESQUERDA); LOAD M(0F8);
011 STOR M(014, DIREITA); ADD M(0F1);
012 STOR M(0F8); LOAD M(0F9);
013 STOR M(015, ESQUERDA); ADD M(0F1);
014 STOR M(0F9); LOAD M(FF8);
015 STOR M(FF9); LOAD M(0EF);
016 SUB M(0F1); STOR M(0EF);
017 JUMP+ M(010, DIREITA);

0EF 00 00 00 00 0E
0F0 00 00 00 01 00 
0F1 00 00 00 00 01
0F2 00 00 00 00 00 
0F3 00 00 00 03 00 
0F4 00 00 00 00 0D 
0F5 00 00 00 00 0E 
0F6 00 00 00 00 0D 
0F7 00 00 00 01 00
0F8 00 00 00 01 00
0F9 00 00 00 03 00
0FA 00 00 00 00 00
